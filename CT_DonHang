
package BookStore;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;
import java.util.Scanner;

public class CT_DonHang {
    private String maDonHang;
    private String maKH;
    private String diaChi;
    private String email;
    private String ngayDH;
    private String ptThanhToan;
    private int trangThai; //1: chờ xử lý (đã đặt hàng); 2: đã xử lý , 3: đang giao; 4: đã nhận hàng; 5: đã huỷ đơn
    private Double tongTien;
    private String dsSanPham;
    Scanner scan = new Scanner(System.in);
    
    public CT_DonHang() {
    }

    public CT_DonHang(String maDonHang, String maKH, String diaChi, String email, String ngayDH, String ptThanhToan, int trangThai, Double tongTien, String dsSanPham) {
        this.maDonHang = maDonHang;
        this.maKH = maKH;
        this.diaChi = diaChi;
        this.email = email;
        this.ngayDH = ngayDH;
        this.ptThanhToan = ptThanhToan;
        this.trangThai = trangThai;
        this.tongTien = tongTien;
        this.dsSanPham = dsSanPham;
    }
   
    public String taoMaDH() {
        Random rand = new Random();
        int soNgauNhien = rand.nextInt(1000000); 
        String maSoNgauNhien = String.format("%06d", soNgauNhien);
        
        String maDonHang = "DH" + this.getMaKH() + maSoNgauNhien;
        return maDonHang;
    }
    
    public String getMaDonHang() {
        return maDonHang;
    }

    public void setMaDonHang(String maDonHang) {
        this.maDonHang = maDonHang;
    }

    public String getDiaChi() {
        return diaChi;
    }

    public void setDiaChi(String diaChi) {
        this.diaChi = diaChi;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getNgayDH() {
        return ngayDH;
    }

    public void setNgayDH(String ngayDH) {
        this.ngayDH = ngayDH;
    }

    public String getPtThanhToan() {
        return ptThanhToan;
    }

    public void setPtThanhToan(String ptThanhToan) {
        this.ptThanhToan = ptThanhToan;
    }

    public Double getTongTien() {
        return tongTien;
    }

    public void setTongTien(Double tongTien) {
        this.tongTien = tongTien;
    }
    
    public int getTrangThai() {
        return trangThai;
    }

    public void setTrangThai(int trangThai) {
        this.trangThai = trangThai;
    }

    public String getMaKH() {
        return maKH;
    }

    public void setMaKH(String maKH) {
        this.maKH = maKH;
    }

    public String getDsSanPham() {
        return dsSanPham;
    }

    public void setDsSanPham(String dsSanPham) {
        this.dsSanPham = dsSanPham;
    }
    
    
//    public Double tinhTongTien() {
//        for (GioHang giohang : dsSanPham) {
//        tongTien += giohang.getThanhTien();
//        }
//        return tongTien;
//    }
    
    //Chưa có trường hợp khách mua sách điện tử phải bắt buộc thanh toán chuyển khoản
    public String chonPTTT() {
        String ptThanhToan = new String();
        int chon=0;
        do {
            try {
                System.out.println(" Chọn phương thức thanh toán: ");
                System.out.println("1. Tiền mặt || 2. Chuyển khoản ");
                chon = Integer.parseInt(scan.nextLine());
                    if (chon == 1) {
                        ptThanhToan = "tiền mặt";
                        break;
                    }
                    if (chon == 2) {
                        ptThanhToan = "chuyển khoản";
                        break;
                    }   
                if (chon < 1 || chon > 2)
                System.out.println(" Vui long chon phuong thuc thanh toan! ");
            } catch(NumberFormatException e)
                {
                    System.out.println("Vui lòng chọn đúng các thao tác đã hiển thị!!!");
                }
                catch ( Exception e)
                {
                    System.out.println(e.getMessage());
                }
            } while (chon != 2);
        return ptThanhToan;
    }
    
    
//    public double giamGia() {
//        if (this.tinhTongTien() >= 500000) {
//            return (10/100)*this.tinhTongTien();
//        } else { 
//            if (this.tinhTongTien() >= 300000) {
//                return (5/100)*this.tinhTongTien();
//            } else return 0;
//        }
//    }
//        
//    public double giaSauKhiGiam() {
//        this.tongTien = this.tinhTongTien() - this.giamGia();
//        return this.tongTien;
//    }
    
   
    public String chonDiaChi() {
        String diachi = null;
/*        File file= new File("user.txt");
        try {
            Scanner scanner = new Scanner(file);
             while(scanner.hasNextLine()){ 
                String line = scanner.nextLine();
                String[] khachhang = line.split("#");
                String maKhachHang = khachhang[3];
                String email = khachhang[6];
                String diaChi = khachhang[7];
            } 
        } catch (FileNotFoundException ex) {
            System.out.println("Không tìm thấy file !!!");
        }*/
        String dchi[] = this.diaChi.split(";");
        int chon = 0;
        do {
            try {
                System.out.println(" Chọn địa chỉ nhận hàng: ");
                for (int i = 0; i < dchi.length; i++) {
                    System.out.println((i+1) + ". " + dchi[i] + "\n");
                }
                chon = Integer.parseInt(scan.nextLine());
                //Có 1 địa chỉ
                if (dchi.length <=1 ) {
                    if (chon == 1) {
                        diachi = dchi[0];
                        break;
                    }
                    if (chon != 1) System.out.println("Vui lòng chọn địa chỉ nhận hàng! ");
                }
                //Có 2 địa chỉ
                if (dchi.length <=2 ) {
                    if (chon == 1) {
                        diachi = dchi[0];
                        break;
                    }
                    if (chon == 2) {
                        diachi = dchi[1];
                        break;
                    }
                    if (chon < 1 || chon > 2) System.out.println("Vui lòng chọn địa chỉ nhận hàng! ");                               
                }
                if (dchi.length <=3 ) {
                    if (chon == 1) {
                        diachi = dchi[0];
                        break;
                    }
                    if (chon == 2) {
                        diachi = dchi[1];
                        break;
                    }
                    if (chon == 3) {
                        diachi = dchi[2];
                        break;
                    }
                     if (chon < 1 || chon > 3)
                System.out.println(" Vui lòng chọn địa chỉ giao hàng ");
                    }  
            } catch(NumberFormatException e)
                {
                    System.out.println("Vui lòng chọn đúng các thao tác đã hiển thị!!!");
                }
                catch ( Exception e)
                {
                    System.out.println(e.getMessage());
                }
            } while (chon != 3);
        
        return diachi;
    }
    
    public void setInfo() {
        System.out.println("-----THÔNG TIN ĐẶT HÀNG-----");
        this.chonDiaChi();
        this.getEmail();
        this.chonPTTT();
    }
       
    public String hienThiSanPham(String maKhachHang) {
        String dsSanPham = null;
        GioHang giohang = new GioHang();
        dsSanPham = giohang.chonSachTuDanhSach(maKhachHang);        
        return dsSanPham;
    }
            
    public void datHang() {

            if (null!= this.getDsSanPham()) {
                this.setInfo();
                System.out.println("--BẠN CÓ XÁC NHẬN ĐẶT HÀNG?--");
                System.out.println("1. Đồng ý đặt hàng");
                System.out.println("2. Xem thêm sản phẩm");
                int chon = 0;
                do {
                    Scanner scan = new Scanner(System.in);
                    chon = Integer.parseInt(scan.nextLine());
                    switch (chon) {
                        case 1:
                            this.setTrangThai(0);
                            this.setMaDonHang(this.taoMaDH());
                            this.getDsSanPham();
                            this.setTongTien(this.tinhTongTien()); 
                            LocalDateTime myDateObj = LocalDateTime.now();   
                            DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                            this.setNgayDH(myDateObj.format(myFormatObj));
                            try (FileWriter fileWriter = new FileWriter("DonHang.txt", true)) {
                                    StringBuilder sb = new StringBuilder();
                                    sb.append(this.getMaKH()).append("#");
                                    sb.append(this.getMaDonHang()).append("#");
                                    sb.append(this.getEmail()).append("#");
                                    sb.append(this.chonDiaChi()).append("#");
                                    sb.append(this.getNgayDH()).append("#");
                                    
                                    sb.append(this.tinhTongTien()).append("#");
                                    sb.append(this.chonPTTT()).append("#");
                                    sb.append(this.getTrangThai()).append("#");
                                    sb.append(System.lineSeparator()); //Xuống dòng
                                    fileWriter.write(sb.toString()); //Ghi chuỗi thông tin vào file
                                    fileWriter.flush(); 
                                    System.out.println("ĐẶT HÀNG THÀNH CÔNG!");
                                    //phương thức cập nhật số lượng sách tồn kho
                            }
                                catch (IOException e) {
                                    System.out.println("\n ĐẶT HÀNG KHÔNG THÀNH CÔNG! \n");
                                    System.out.println("Có lỗi khi ghi vào file: " + e.getMessage());
                            }
                            break;
                        case 2:
                             //ve trang chu    
                    }
                    if (chon < 1 || chon > 2)
                            System.out.println("\n Vui lòng xác nhận đặt hàng! \n");
                } while (chon != 3);
            }
    }

    private Double tinhTongTien() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    @Override
    public String toString() {
       if (this.getTrangThai() == 0 || this.getDsSanPham()== null) return " ";
       StringBuilder sb = new StringBuilder();
       sb.append("\n");
       sb.append("Mã khách hàng: ").append(this.getMaKH()).append("\n");
       sb.append("Mã đơn: ").append(this.getMaDonHang()).append("\n");
       sb.append("Email: ").append(this.getEmail()).append("\n");
       sb.append("Địa chỉ: ").append(this.getDiaChi()).append("\n");
       sb.append("Ngày đặt hàng: ").append(this.getNgayDH()).append("\n");
       sb.append("Mô tả sản phẩm: \n");
       
       sb.append("Tổng tiền: ").append(this.getTongTien()).append("\n");
       sb.append("Phương thức thanh toán: ").append(this.getPtThanhToan()).append("\n");
       sb.append("Trạng thái: ").append(this.getTrangThai()).append("\n");
       return sb.toString();
        
    }
    /* public static void main(String[] args) {
       
        CT_DonHang donhang = new CT_DonHang();
        donhang.setInfo();
        System.out.println(donhang.toString());
    }*/
}

